Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.
------------------------------------------------
class Solution:
    def addStrings(self, num1: str, num2: str) -> str:
        if len(num1)<len(num2):
            num1, num2 = num2, num1
        num1 = list(num1)
        num2 = list(num2)
        num1.reverse()
        num2.reverse()
        _ans=[]
        carry = 0
        i = 0 
        while i < len(num2):
            _temp = ord(num1[i]) + ord(num2[i]) - 2*ord("0") + carry
            carry = _temp//10
            _temp = _temp%10
            _ans.append(chr(_temp + ord("0")))
            i += 1
        
        while i <len(num1):
            _temp = ord(num1[i]) + carry - ord("0")
            carry = _temp//10
            _temp = _temp%10
            _ans.append(chr(_temp + ord("0")))
            i += 1
        if carry == 1:
            _ans.append("1")
        _ans.reverse()
        return "".join(_ans)
            