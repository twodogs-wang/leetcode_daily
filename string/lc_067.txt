Given two binary strings, return their sum (also a binary string).

The input strings are both non-empty and contains only characters 1 or 0.

Example 1:

Input: a = "11", b = "1"
Output: "100"
Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 

Constraints:

Each string consists only of '0' or '1' characters.
1 <= a.length, b.length <= 10^4
Each string is either "0" or doesn't contain any leading zero.
--------------------------------------------------------------
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        if not b or b == "":
            return a
        elif not a or a == "":
            return b
        _ans = ""
        carry = 0
        
        while a != "" and b != "":
            _temp = int(a[-1]) + int(b[-1]) + carry
            a = a[:-1]
            b = b[:-1]
            carry = int(_temp / 2)
            _temp = _temp % 2
            _ans = str(_temp) + _ans
        
        if len(a)==len(b):
            if carry==1:
                return "1" + _ans
            else:
                return _ans
        
        if len(a) > len(b):
            _rest = a
        else:
            _rest = b
        
        if carry == 0:
            return _rest + _ans
        
        else:
            while _rest!="":
                _temp = int(_rest[-1]) + carry
                _rest = _rest[:-1]
                carry = int(_temp/2)
                _temp = _temp%2
                _ans = str(_temp) + _ans
            if carry == 0:
                return _ans
            else:
                return "1" + _ans
