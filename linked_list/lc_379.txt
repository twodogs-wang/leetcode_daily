Design a Phone Directory which supports the following operations:

get: Provide a number which is not assigned to anyone.
check: Check if a number is available or not.
release: Recycle or release a number.
--------------------------------------------------
#include<hash_map>
using namespace std;

class PhoneDirectory {

__gnu_cxx::hash_map<int,bool> my_map;
vector<int> pool;
size_t size;

    public:
    /** Initialize your data structure here
        @param maxNumbers - The maximum numbers that can be stored in the phone directory. */
    PhoneDirectory(int maxNumbers) {

        for (int i=0;i<maxNumbers;i++)
        {
        my_map[i] = false;
        pool.push_back(i);
        }
        size = maxNumbers;
        return;
    }

    /** Provide a number which is not assigned to anyone.
        @return - Return an available number. Return -1 if none is available. */
    int get() {
            if (pool.size()==0)
            {
            return -1;
            }
        int ans = *(pool.begin());
        pool.erase(pool.begin());
        my_map[ans] = true;
        return ans;

    }

    /** Check if a number is available or not. */
    bool check(int number) {
        if (number>=size)
        {
            return false;
        }
        return !(my_map[number]);
    }

    /** Recycle or release a number. */
    void release(int number) {
        if (number>=size)
        {
            return;
        }
        if (!my_map[number])
        {
            return;
        }
        my_map[number] = false;
        pool.push_back(number);
    }
};
