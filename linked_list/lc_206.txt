Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
---------------------------------------------------------
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        if not head:
            return None
        _this_node=head
        temp=[]

        while _this_node:
            temp.append(_this_node.val)
            _this_node=_this_node.next

        _this_node=ListNode(0)
        ans=_this_node
        while temp:
            _this_node.val=temp.pop()
            if temp:
                _this_node.next=ListNode(0)
                _this_node=_this_node.next
        return ans
            
