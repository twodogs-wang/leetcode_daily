Alice and Bob take turns playing a game, with Alice starting first.

Initially, there is a number N on the chalkboard.  On each player's turn, that player makes a move consisting of:

Choosing any x with 0 < x < N and N % x == 0.
Replacing the number N on the chalkboard with N - x.
Also, if a player cannot make a move, they lose the game.

Return True if and only if Alice wins the game, assuming both players play optimally.

 

Example 1:

Input: 2
Output: true
Explanation: Alice chooses 1, and Bob has no more moves.
Example 2:

Input: 3
Output: false
Explanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.
---------------------------------------------------------------------
class Solution {
    public boolean divisorGame(int N) {
        if(N==1){return false;}
        else if(N==2){return true;}
        boolean[] dp = new boolean[N+1];
        for (int i=0;i<dp.length;i++){
            dp[i]=false;
        }
        dp[2] = true;
        
        for (int i=3;i<N+1;i++){
            if (i%2==0){
                dp[i] = !(dp[i-1]&&dp[i-2]);
            }
            else{
                dp[i] = !dp[i-1];    
            }
        }
        return dp[N];
    }
}