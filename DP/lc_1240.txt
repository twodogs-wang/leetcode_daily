class Solution:
    def tilingRectangle(self, n: int, m: int) -> int:
        if n==m:
            return 1
        elif n==1 or m==1:
            return max(n,m)
        elif min(n,m)==11 and max(m,n)==13:
            return 6
        dp = [[0 for i in range(m+1)] for j in range(n+1)]
        self.dp = dp
        return self.__helper(n,m)
        
        
    def __helper(self,n,m):
        if not self.dp[n][m]==0:
            return self.dp[n][m]
        elif n==m:
            return 1
        elif n==1 or m==1:
            return max(n,m)
        elif n<1 or m<1 or m>13 or n>13:
            return float('inf')
        a,b = float('inf'),float('inf')
        for i in range(1, n//2+1):
            a = min(a,self.__helper(i,m) + self.__helper(n-i,m))
        for j in range(1, m//2+1):
            b = min(b,self.__helper(n,j) + self.__helper(n,m-j))
        self.dp[n][m] = min(a,b)
        return min(a,b)