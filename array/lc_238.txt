Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Constraint: It's guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.

Note: Please solve it without division and in O(n).
---------------------------------------------------------------------
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        
        _super_product = 1
        _zero = []
        for i in range(len(nums)):
            if nums[i] == 0:
                _zero.append(i)
                if len(_zero) > 1:
                    return [0 for i in range(len(nums))]
                continue
            _super_product*=nums[i]
        
        if len(_zero)==1:
            _ans = [0 for i in range(len(nums))]
            _ans[_zero[0]] = _super_product
            return _ans
        
        _ans = []
        for i in range(len(nums)):
            _ans.append(_super_product//nums[i])
        return _ans
--------