Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
-----------------------------------------------------------------------------
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return nums[0]
        _max = nums[0]
        _min = nums[0]
        _ans = nums[0]
        for i in range(1, len(nums)):
            _temp = _max
            _max = max(nums[i], _min*nums[i], _max*nums[i])
            _min = min(nums[i], _min*nums[i], _temp*nums[i]) #potential biggest absolute value
            if _max > _ans:
                _ans = _max
        return _ans