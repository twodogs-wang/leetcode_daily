Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
--------------------------------------------
class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        self.ans = []
        self.__helper(nums, list(), 0)
        return self.ans
    
    def __helper(self, nums, _sub_ans, level):
        self.ans.append(_sub_ans[:])
        for i in range(level, len(nums)):
            _sub_ans.append(nums[i])
            self.__helper(nums, _sub_ans, i + 1)
            _sub_ans.pop()