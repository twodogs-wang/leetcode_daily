There are N network nodes, labelled 1 to N.

Given times, a list of travel times as directed edges times[i] = (u, v, w), where u is the source node, v is the target node, and w is the time it takes for a signal to travel from source to target.

Now, we send a signal from a certain node K. How long will it take for all nodes to receive the signal? If it is impossible, return -1.
------------------------------------------
class Solution {
    public int networkDelayTime(int[][] times, int N, int K) {
        int[] dist = new int[N+1];
        for(int i=0;i<N+1;i++){
            dist[i] = Integer.MAX_VALUE;
        }
        dist[K] = 0;
        for(int i=0;i<N;i++){
            for(int[] tmp:times){
                if(dist[tmp[0]]!=Integer.MAX_VALUE && dist[tmp[1]]>dist[tmp[0]]+tmp[2]){
                    dist[tmp[1]]=dist[tmp[0]]+tmp[2];
                }
            }
        }
        
        int wait = 0;
        for(int i=1;i<=N;i++){
            wait = Math.max(wait,dist[i]);
        }
        
        if(wait==Integer.MAX_VALUE) return -1;
        return wait;
    }
}