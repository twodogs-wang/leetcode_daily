Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.
----------------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int ans = 0;
    public int minDepth(TreeNode root) {
        if (root==null){return 0;}
        helper(root, 1);
        return ans;
    }
    private void helper(TreeNode root, int level){
        if(root==null){return;}
        
        if (root.left!=null){helper(root.left, level+1);}
        if (root.right!=null){helper(root.right, level+1);}
        if (root.left==null && root.right==null)
        {
            if (ans==0){
                ans=level;
                return;
            }
            ans = Math.min(ans,level);
            return;
        }
        
        
    }
}